import {render} from "@testing-library/react";
import Col from "../components/bootstrap/Col";

// Generated by CodiumAI

describe('Col', () => {

    // Returns a div element with class name 'col-md-6' and any additional class names passed as props
    it('should return a div element with class name \'col-md-6\' and additional class names', () => {
      const { container } = render(<Col className="custom-class" />);
      expect(container.firstChild).toHaveClass('col-md-6');
      expect(container.firstChild).toHaveClass('custom-class');
    });

    // Renders any children passed as props inside the div element
    it('should render children inside the div element', () => {
      const { container } = render(<Col>Test</Col>);
      expect(container.firstChild).toHaveTextContent('Test');
    });

    // Accepts any additional props and spreads them onto the div element
    it('should accept and spread additional props onto the div element', () => {
      const { container } = render(<Col data-testid="col" />);
      expect(container.firstChild).toHaveAttribute('data-testid', 'col');
    });

    // className prop is not passed, resulting in only 'col-md-6' as class name
    it('should have only \'col-md-6\' as class name when className prop is not passed', () => {
      const { container } = render(<Col />);
      expect(container.firstChild).toHaveClass('col-md-6');
      expect(container.firstChild.classList.length).toBe(1);
    });

    // ColNumSize prop is not passed, resulting in only 'col-md-6' as class name
    it('should have only \'col-md-6\' as class name when ColNumSize prop is not passed', () => {
      const { container } = render(<Col ColSize="md" />);
      expect(container.firstChild).toHaveClass('col-md-6');
      expect(container.firstChild.classList.length).toBe(1);
    });

    // ColSize prop is not passed, resulting in only 'col-md-6' as class name
    it('should have only \'col-md-6\' as class name when ColSize prop is not passed', () => {
      const { container } = render(<Col ColNumSize={6} />);
      expect(container.firstChild).toHaveClass('col-md-6');
      expect(container.firstChild.classList.length).toBe(1);
    });

    // ColSize prop is passed as 'sm' and ColNumSize prop is passed as '3', resulting in 'col-sm-3' as class name
    it('should have \'col-sm-3\' as class name when ColSize prop is passed as \'sm\' and ColNumSize prop is passed as \'3\'', () => {
      const { container } = render(<Col ColSize="sm" ColNumSize={3} />);
      expect(container.firstChild).toHaveClass('col-sm-3');
      expect(container.firstChild.classList.length).toBe(1);
    });
});
