import {render, screen} from '@testing-library/react';
import CardHeader from '../components/bootstrap/CardHeader';

// Generated by CodiumAI

describe('CardHeader', () => {

    // Renders a div element with class 'card-header' and any additional className passed as props
    it('should render a div element with class \'card-header\' and additional className when className prop is passed', () => {
      const { container } = render(<CardHeader className="custom-class" />);
      const divElement = container.querySelector('.card-header');
      expect(divElement).toBeInTheDocument();
      expect(divElement).toHaveClass('custom-class');
    });

    // Renders the children passed as props inside the div element
    it('should render the children passed as props inside the div element', () => {
      const { container } = render(<CardHeader>Child Content</CardHeader>);
      const divElement = container.querySelector('.card-header');
      expect(divElement).toBeInTheDocument();
      expect(divElement.textContent).toBe('Child Content');
    });

    // Renders the div element with any additional props passed
    it('should render the div element with any additional props passed', () => {
      const { container } = render(<CardHeader data-testid="header" />);
      const divElement = container.querySelector('.card-header');
      expect(divElement).toBeInTheDocument();
      expect(divElement).toHaveAttribute('data-testid', 'header');
    });

    // className prop is not passed
    it('should render a div element with class \'card-header\' when className prop is not passed', () => {
      const { container } = render(<CardHeader />);
      const divElement = container.querySelector('.card-header');
      expect(divElement).toBeInTheDocument();
    });

    // children prop is not passed
    it('should render a div element with class \'card-header\' when children prop is not passed', () => {
      const { container } = render(<CardHeader />);
      const divElement = container.querySelector('.card-header');
      expect(divElement).toBeInTheDocument();
      expect(divElement.textContent).toBe('');
    });

    // props other than className and children are passed
    it('should render the div element with any additional props passed except className and children', () => {
      const { container } = render(<CardHeader data-testid="header" id="header" />);
      const divElement = container.querySelector('.card-header');
      expect(divElement).toBeInTheDocument();
      expect(divElement).toHaveAttribute('data-testid', 'header');
      expect(divElement).toHaveAttribute('id', 'header');
    });
});
